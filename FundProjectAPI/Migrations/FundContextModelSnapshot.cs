// <auto-generated />
using System;
using FundProjectAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FundProjectAPI.Migrations
{
    [DbContext(typeof(FundContext))]
    partial class FundContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FundProjectAPI.Model.Backer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Backer");
                });

            modelBuilder.Entity("FundProjectAPI.Model.BackerProject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BackerId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BackerId");

                    b.HasIndex("ProjectId");

                    b.ToTable("BackerProject");
                });

            modelBuilder.Entity("FundProjectAPI.Model.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Goal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GoalGained")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProjectCreatorId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectCreatorId");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("FundProjectAPI.Model.ProjectCreator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ProjectCreator");
                });

            modelBuilder.Entity("FundProjectAPI.Model.ProjectCreatorRewardPackage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ProjectCreatorId")
                        .HasColumnType("int");

                    b.Property<int?>("RewardPackageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectCreatorId");

                    b.HasIndex("RewardPackageId");

                    b.ToTable("ProjectCreatorRewardPackage");
                });

            modelBuilder.Entity("FundProjectAPI.Model.RewardPackage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("FundAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ProjectCreatorId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("Reward")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectCreatorId");

                    b.HasIndex("ProjectId");

                    b.ToTable("RewardPackage");
                });

            modelBuilder.Entity("FundProjectAPI.Model.BackerProject", b =>
                {
                    b.HasOne("FundProjectAPI.Model.Backer", "Backer")
                        .WithMany("BackerProjects")
                        .HasForeignKey("BackerId");

                    b.HasOne("FundProjectAPI.Model.Project", "Project")
                        .WithMany("BackerProjects")
                        .HasForeignKey("ProjectId");

                    b.Navigation("Backer");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("FundProjectAPI.Model.Project", b =>
                {
                    b.HasOne("FundProjectAPI.Model.ProjectCreator", null)
                        .WithMany("Projects")
                        .HasForeignKey("ProjectCreatorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FundProjectAPI.Model.ProjectCreatorRewardPackage", b =>
                {
                    b.HasOne("FundProjectAPI.Model.ProjectCreator", "ProjectCreator")
                        .WithMany()
                        .HasForeignKey("ProjectCreatorId");

                    b.HasOne("FundProjectAPI.Model.RewardPackage", "RewardPackage")
                        .WithMany()
                        .HasForeignKey("RewardPackageId");

                    b.Navigation("ProjectCreator");

                    b.Navigation("RewardPackage");
                });

            modelBuilder.Entity("FundProjectAPI.Model.RewardPackage", b =>
                {
                    b.HasOne("FundProjectAPI.Model.ProjectCreator", null)
                        .WithMany("RewardsPackages")
                        .HasForeignKey("ProjectCreatorId");

                    b.HasOne("FundProjectAPI.Model.Project", null)
                        .WithMany("FundRewardPackages")
                        .HasForeignKey("ProjectId");
                });

            modelBuilder.Entity("FundProjectAPI.Model.Backer", b =>
                {
                    b.Navigation("BackerProjects");
                });

            modelBuilder.Entity("FundProjectAPI.Model.Project", b =>
                {
                    b.Navigation("BackerProjects");

                    b.Navigation("FundRewardPackages");
                });

            modelBuilder.Entity("FundProjectAPI.Model.ProjectCreator", b =>
                {
                    b.Navigation("Projects");

                    b.Navigation("RewardsPackages");
                });
#pragma warning restore 612, 618
        }
    }
}
